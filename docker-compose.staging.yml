version: "3.8"

services:
  # Staging MongoDB
  mongo:
    image: mongo:6.0
    container_name: jenkins-mongo-staging
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-root}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-password123}
      MONGO_INITDB_DATABASE: jenkins_mern_staging_db
    volumes:
      - mongo_staging_data:/data/db
      - ./docker/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - staging-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3

  # Staging API Server
  server:
    image: jenkins-mern-server:${BUILD_NUMBER:-latest}
    container_name: jenkins-server-staging
    restart: unless-stopped
    environment:
      NODE_ENV: staging
      MONGODB_URI: mongodb://${MONGO_ROOT_USERNAME:-root}:${MONGO_ROOT_PASSWORD:-password123}@mongo:27017/jenkins_mern_staging_db?authSource=admin
      PORT: 5000
      BUILD_NUMBER: ${BUILD_NUMBER}
      GIT_COMMIT: ${GIT_COMMIT}
    ports:
      - "5001:5000" # Different port for staging
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - staging-network
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Staging Client
  client:
    image: jenkins-mern-client:${BUILD_NUMBER:-latest}
    container_name: jenkins-client-staging
    restart: unless-stopped
    ports:
      - "3001:80" # Different port for staging
    depends_on:
      server:
        condition: service_healthy
    networks:
      - staging-network
    environment:
      NGINX_HOST: staging-${STAGING_DOMAIN:-localhost}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 5s
      retries: 3

volumes:
  mongo_staging_data:
    driver: local

networks:
  staging-network:
    driver: bridge
