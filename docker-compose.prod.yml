version: "3.8"

services:
  # Production MongoDB with persistence and security
  mongo:
    image: mongo:6.0
    container_name: jenkins-mongo-prod
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: jenkins_mern_prod_db
    volumes:
      - mongo_prod_data:/data/db
      - ./docker/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - prod-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Production API Server
  server:
    image: jenkins-mern-server:${BUILD_NUMBER:-latest}
    container_name: jenkins-server-prod
    restart: always
    environment:
      NODE_ENV: production
      MONGODB_URI: mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@mongo:27017/jenkins_mern_prod_db?authSource=admin
      PORT: 5000
      BUILD_NUMBER: ${BUILD_NUMBER}
      GIT_COMMIT: ${GIT_COMMIT}
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - prod-network
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 512M
        reservations:
          cpus: "0.5"
          memory: 256M

  # Production Client with Nginx
  client:
    image: jenkins-mern-client:${BUILD_NUMBER:-latest}
    container_name: jenkins-client-prod
    restart: always
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      server:
        condition: service_healthy
    networks:
      - prod-network
    volumes:
      - ./ssl:/etc/nginx/ssl:ro # SSL certificates
    environment:
      NGINX_HOST: ${PRODUCTION_DOMAIN:-localhost}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 5s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Monitoring with Prometheus (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: jenkins-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
    networks:
      - prod-network

volumes:
  mongo_prod_data:
    driver: local
  prometheus_data:
    driver: local

networks:
  prod-network:
    driver: bridge
